(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{691:function(e,t,n){"use strict";n.r(t);var a=n(6),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"vue实例的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue实例的生命周期"}},[e._v("#")]),e._v(" "),n("span",{attrs:{id:"top"}},[e._v("Vue实例的生命周期")])]),e._v(" "),n("hr"),e._v(" "),n("h2",{attrs:{id:"生命周期图"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#生命周期图"}},[e._v("#")]),e._v(" "),n("span",{attrs:{id:"1"}},[e._v("生命周期图")])]),e._v(" "),n("p",[e._v("Vue实例的生命周期中有多个状态。\n"),n("img",{attrs:{src:"images/lifecycle.png",alt:"生命周期图"}})]),e._v(" "),n("h3",{attrs:{id:"测试代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试代码"}},[e._v("#")]),e._v(" 测试代码")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('<!DOCTYPE html>\n<html lang="en">\n<head>\n    <meta charset="UTF-8">\n    <meta name="viewport" content="width=device-width, initial-scale=1.0">\n    <meta http-equiv="X-UA-Compatible" content="ie=edge">\n    <title>Vue实例的生命周期</title>\n\n    \x3c!-- 引入vue.js --\x3e\n    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js"><\/script>\n</head>\n<body>\n    <div id="app">\n        <h1>测试生命周期</h1>\n        <div>'+e._s(e.msg)+'</div>\n        <hr>\n        <h3>测试beforeUpdate和update两个钩子函数</h3>\n        <button @click="handlerUpdate">更新数据</button>\n    </div>\n    <script>\n        var app = new Vue({\n            el:"#app",\n            data:{\n                msg:"12345"\n            },\n            methods: {\n                handlerUpdate:function(){\n                    this.msg=this.msg.split("").reverse().join("");\n                },\n            },//按照示意图依次调用\n            beforeCreate:function(){\n                console.log("调用了beforeCreate钩子函数");\n            },\n            created:function () {\n                console.log("调用了created钩子函数");\n            },\n            beforeMount: function () {\n                console.log(\'调用了beforeMount钩子函数\')\n            },\n            mounted: function () {\n                console.log(\'调用了mounted钩子函数\')\n            },\n            beforeUpdate: function () {\n                console.log("调用了beforeUpdate钩子函数")\n            },\n            updated: function () {\n                console.log("调用了updated钩子函数");\n            },\n            beforeDestroy: function () {\n                console.log("调用了beforeDestroy钩子函数")\n            },\n            destroyed: function () {\n                console.log("调用了destroyed钩子函数");\n            },\n        });\n    <\/script>\n</body>\n</html>\n')])])]),n("p",[e._v("如图所示：\n"),n("img",{attrs:{src:"images/1.png",alt:"reslut"}}),e._v("\n初始化页面依次调用了：")]),e._v(" "),n("blockquote",[n("ol",[n("li",[e._v("调用了beforeCreate钩子函数")]),e._v(" "),n("li",[e._v("调用了created钩子函数")]),e._v(" "),n("li",[e._v("调用了beforeMount钩子函数")]),e._v(" "),n("li",[e._v("调用了mounted钩子函数")])])]),e._v(" "),n("p",[e._v("点击更新数据后：\n"),n("code",[e._v("12345")]),e._v("变成了"),n("code",[e._v("54321")]),e._v("，此时调用了：")]),e._v(" "),n("blockquote",[n("ol",[n("li",[e._v("调用了beforeUpdate钩子函数")]),e._v(" "),n("li",[e._v("调用了updated钩子函数")])])]),e._v(" "),n("p",[e._v("打开F12控制台\n直接输入"),n("code",[e._v("app.$destroy()")]),e._v("主动销毁Vue实例调用：")]),e._v(" "),n("blockquote",[n("ol",[n("li",[e._v("调用了beforeDestroy钩子函数")]),e._v(" "),n("li",[e._v("调用了destroyed钩子函数")])])]),e._v(" "),n("h2",{attrs:{id:"再探究"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#再探究"}},[e._v("#")]),e._v(" 再探究")]),e._v(" "),n("h3",{attrs:{id:"beforecreate之前"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate之前"}},[e._v("#")]),e._v(" beforeCreate之前")]),e._v(" "),n("p",[e._v("初始化钩子函数和生命周期")]),e._v(" "),n("h3",{attrs:{id:"beforecreate和created钩子函数间的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforecreate和created钩子函数间的生命周期"}},[e._v("#")]),e._v(" beforeCreate和created钩子函数间的生命周期")]),e._v(" "),n("p",[e._v("在beforeCreate和created之间，进行数据观测(data observer) ，也就是在这个时候开始监控data中的数据变化了，同时初始化事件。\n"),n("span",{staticStyle:{float:"right"}},[n("a",{attrs:{href:"#1"}},[e._v("生命周期展示图")])])]),e._v(" "),n("h3",{attrs:{id:"created钩子函数和beforemount间的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#created钩子函数和beforemount间的生命周期"}},[e._v("#")]),e._v(" created钩子函数和beforeMount间的生命周期")]),e._v(" "),n("p",[e._v("对于created钩子函数和beforeMount有判断：\n"),n("img",{attrs:{src:"images/2.png",alt:"2"}})]),e._v(" "),n("h4",{attrs:{id:"el选项对生命周期影响"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#el选项对生命周期影响"}},[e._v("#")]),e._v(" el选项对生命周期影响")]),e._v(" "),n("blockquote",[n("ol",[n("li",[e._v("有el选项")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("new Vue({\n    el: '#app',\n    beforeCreate: function () {\n        console.log('调用了beforeCreat钩子函数')\n    },\n    created: function () {\n        console.log('调用了created钩子函数')\n    },\n    beforeMount: function () {\n        console.log('调用了beforeMount钩子函数')\n    },\n    mounted: function () {\n        console.log('调用了mounted钩子函数')\n    }\n})\n")])])]),n("p",[e._v("结果:\n"),n("img",{attrs:{src:"images/3.png",alt:"有el"}})]),e._v(" "),n("blockquote",[n("ol",{attrs:{start:"2"}},[n("li",[e._v("无el选项")])])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("new Vue({\n    beforeCreate: function () {\n        console.log('调用了beforeCreat钩子函数')\n    },\n    created: function () {\n        console.log('调用了created钩子函数')\n    },\n    beforeMount: function () {\n        console.log('调用了beforeMount钩子函数')\n    },\n    mounted: function () {\n        console.log('调用了mounted钩子函数')\n    }\n})\n")])])]),n("p",[e._v("结果：\n"),n("img",{attrs:{src:"images/4.png",alt:"无el"}})]),e._v(" "),n("blockquote",[n("p",[e._v("证明没有el选项，则停止编译，也意味着暂时停止了生命周期。生命周期到created钩子函数就结束了。而当我们不加el选项，但是手动执行vm.$mount(el)方法的话，也能够使暂停的生命周期进行下去，例如：")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("var app = new Vue({\n    beforeCreate: function () {\n        console.log('调用了beforeCreat钩子函数')\n    },\n    created: function () {\n        console.log('调用了created钩子函数')\n    },\n    beforeMount: function () {\n        console.log('调用了beforeMount钩子函数')\n    },\n    mounted: function () {\n        console.log('调用了mounted钩子函数')\n    }\n})\napp.$mount('#app')\n")])])]),n("p",[e._v("结果：\n"),n("img",{attrs:{src:"images/3.png",alt:"有el"}})]),e._v(" "),n("h4",{attrs:{id:"template"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#template"}},[e._v("#")]),e._v(" template")]),e._v(" "),n("p",[n("img",{attrs:{src:"images/5.png",alt:"template"}})]),e._v(" "),n("blockquote",[n("p",[e._v("同时使用"),n("code",[e._v("template")]),e._v("和"),n("code",[e._v("HTML")]),e._v("，查看优先级：")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('    <h1>测试template和HTML的优先级</h1>\n    <div id="app">\n        <p>HTML优先</p>\n    </div>\n    <script>\n        var app = new Vue({\n            el:"#app",\n            data:{\n                msg:"template优先"\n            },\n            template:"<p>'+e._s(e.msg)+'</p>",\n        });\n    <\/script>\n')])])]),n("p",[e._v("结果：\n"),n("img",{attrs:{src:"images/6.png",alt:"template"}})]),e._v(" "),n("blockquote",[n("p",[e._v("结论")])]),e._v(" "),n("ol",[n("li",[e._v("如果Vue实例对象中有template参数选项，则将其作为模板编译成render函数")]),e._v(" "),n("li",[e._v("如果没有template参数选项，则将外部的HTML作为模板编译（template），也就是说，template参数选项的优先级要比外部的HTML高")]),e._v(" "),n("li",[e._v("如果1,2条件都不具备，则报错")])]),e._v(" "),n("blockquote",[n("p",[e._v("注意")])]),e._v(" "),n("ol",[n("li",[n("p",[e._v("Vue需要通过el去找对应的template，Vue实例通过el的参数，首先找自己有没有template，如果没有再去找外部的html，找到后将其编译成render函数。")])]),e._v(" "),n("li",[n("p",[e._v("也可以直接调用"),n("a",{attrs:{href:"https://cn.vuejs.org/v2/api/#render",target:"_blank",rel:"noopener noreferrer"}},[e._v("render"),n("OutboundLink")],1),e._v("选项，优先级："),n("code",[e._v("render函数选项 > template参数 > 外部HTML")]),e._v("。\n")]),n("hr"),n("p"),e._v(" "),n("p",[e._v("new Vue({\nel: '#app',\nrender (createElement) {\nreturn (....)\n}\n})")])])]),e._v(" "),n("h3",{attrs:{id:"beforemount和mounted钩子函数间的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforemount和mounted钩子函数间的生命周期"}},[e._v("#")]),e._v(" beforeMount和mounted钩子函数间的生命周期")]),e._v(" "),n("p",[n("img",{attrs:{src:"images/7.png",alt:"7"}})]),e._v(" "),n("blockquote",[n("p",[e._v("beforeMount")])]),e._v(" "),n("p",[e._v("载入前（完成了data和el数据初始化），但是页面中的内容还是vue中的占位符，data中的message信息没有被挂在到Dom节点中，在这里可以在渲染前最后一次更改数据的机会，不会触发其他的钩子函数，一般可以在这里做初始数据的获取。")]),e._v(" "),n("blockquote",[n("p",[e._v("Mount")])]),e._v(" "),n("p",[e._v("载入后html已经渲染(ajax请求可以放在这个函数中)，把vue实例中的data里的message挂载到DOM节点中去")]),e._v(" "),n("blockquote",[n("p",[e._v("这里两个钩子函数间是载入数据。")])]),e._v(" "),n("h3",{attrs:{id:"beforeupdate钩子函数和updated钩子函数间的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforeupdate钩子函数和updated钩子函数间的生命周期"}},[e._v("#")]),e._v(" beforeUpdate钩子函数和updated钩子函数间的生命周期")]),e._v(" "),n("p",[n("img",{attrs:{src:"images/8.png",alt:"8"}}),e._v("\n在Vue中，修改数据会导致重新渲染，依次调用beforeUpdate钩子函数和updated钩子函数")]),e._v(" "),n("p",[e._v("如果待修改的数据没有载入模板中，不会调用这里两个钩子函数")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("var app = new Vue({\n    el: '#app',\n    data: {\n        msg: 1\n    },\n    template: '<div id=\"app\"><p></p></div>',\n    beforeUpdate: function () {\n        console.log('调用了beforeUpdate钩子函数')\n    },\n    updated: function () {\n        console.log('调用了updated钩子函数')\n    }\n})\napp.msg = 2\n")])])]),n("p",[e._v("结果：\n"),n("img",{attrs:{src:"images/9.png",alt:"9"}}),e._v("\n如果绑定了数据，会调用两个钩子函数：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('<h1>测试有数据绑定修改数据，钩子函数调用情况</h1>\n<div id="app">\n</div>\n<script>\n    var app = new Vue({\n        el:"#app",\n        template:"<p>'+e._s(e.msg)+'</p>",\n        data:{\n            msg:"原数据"\n        },\n        beforeUpdate: function () {\n            console.log("调用了beforeUpdate钩子函数")\n        },\n        updated: function () {\n            console.log("调用了updated钩子函数");\n        },\n    });\n    app.msg = "数据被修改了";\n<\/script>\n')])])]),n("p",[e._v("结果：\n"),n("img",{attrs:{src:"images/10.png",alt:"10"}})]),e._v(" "),n("blockquote",[n("p",[e._v("注意只有写入模板的数据才会被追踪")])]),e._v(" "),n("h3",{attrs:{id:"beforedestroy和destroyed钩子函数间的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy和destroyed钩子函数间的生命周期"}},[e._v("#")]),e._v(" beforeDestroy和destroyed钩子函数间的生命周期")]),e._v(" "),n("p",[n("img",{attrs:{src:"images/11.png",alt:"11"}})]),e._v(" "),n("h4",{attrs:{id:"beforedestroy"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy"}},[e._v("#")]),e._v(" beforeDestroy")]),e._v(" "),n("p",[e._v("销毁前执行（$destroy方法被调用的时候就会执行）,一般在这里善后:清除计时器、清除非指令绑定的事件等等…’)")]),e._v(" "),n("h4",{attrs:{id:"destroyed"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#destroyed"}},[e._v("#")]),e._v(" destroyed")]),e._v(" "),n("p",[e._v("销毁后 （Dom元素存在，只是不再受vue控制）,卸载watcher，事件监听，子组件")]),e._v(" "),n("blockquote",[n("p",[e._v("总结")])]),e._v(" "),n("ul",[n("li",[e._v("beforecreate : 可以在这加个loading事件")]),e._v(" "),n("li",[e._v("created ：在这结束loading，还做一些初始数据的获取，实现函数自-执行")]),e._v(" "),n("li",[e._v("mounted ： 在这发起后端请求，拿回数据，配合路由钩子做一些事情")]),e._v(" "),n("li",[e._v("beforeDestroy： 你确认删除XX吗？")]),e._v(" "),n("li",[e._v("destroyed ：当前组件已被删除，清空相关内容")])]),e._v(" "),n("hr"),e._v(" "),n("div",[n("p",[n("span",{staticStyle:{float:"left"}},[n("a",{attrs:{href:"#top"}},[e._v("返回顶部")])]),n("span",{staticStyle:{float:"right"}},[n("RouterLink",{attrs:{to:"/blogs/vue/"}},[e._v("返回首页")])],1)])])])}),[],!1,null,null,null);t.default=o.exports}}]);